Parsing and Instantiating...
Done
One way facts...
Mutex groups...
Semaphore Facts...
Envelope Facts...
One-shot actions...
Integral variables...
Variable bounds...
Static numeric conditions...
Duration bounds...
TIL time window analysis...
Bounding action timestamps due to time windows...
Dominance constraints (excluding processes and events)...
Damaging events...
Dominance constraints (including processes and events)...
Variable monotonicity...
Max/min needed values for any single precondition...
Irrelevant action pruning by backward reachability from goal...
Uninterestingness criteria...
Compression-safe actions...
Compression-safe invariants...
100% of durative actions in this problem are compression safe
Goal Goal [14]
    (at-curb-num_car_13_curb_13)
    (at-curb-num_car_12_curb_12)
    (at-curb-num_car_11_curb_11)
    (at-curb-num_car_10_curb_10)
    (at-curb-num_car_09_curb_09)
    (at-curb-num_car_08_curb_08)
    (at-curb-num_car_07_curb_07)
    (at-curb-num_car_06_curb_06)
    (at-curb-num_car_05_curb_05)
    (at-curb-num_car_04_curb_04)
    (at-curb-num_car_03_curb_03)
    (at-curb-num_car_02_curb_02)
    (at-curb-num_car_01_curb_01)
    (at-curb-num_car_00_curb_00)

Finishing preprocessing.  Making a TRPG heuristic...
Making an open list...
Running WA* search (g weight = 1, h weight = 5)
{(at-curb_car_02),(at-curb-num_car_02_curb_00),(behind-car_car_08_car_02),(car-clear_car_08),(at-curb_car_12),(at-curb-num_car_12_curb_01),(behind-car_car_03_car_12),(car-clear_car_03),(at-curb_car_09),(at-curb-num_car_09_curb_02),(behind-car_car_11_car_09),(car-clear_car_11),(at-curb_car_00),(at-curb-num_car_00_curb_03),(behind-car_car_10_car_00),(car-clear_car_10),(at-curb_car_13),(at-curb-num_car_13_curb_04),(behind-car_car_01_car_13),(car-clear_car_01),(at-curb_car_05),(at-curb-num_car_05_curb_05),(behind-car_car_07_car_05),(car-clear_car_07),(at-curb_car_06),(at-curb-num_car_06_curb_06),(behind-car_car_04_car_06),(car-clear_car_04),(curb-clear_curb_07),(curb-clear_curb_08),(curb-clear_curb_09),(curb-clear_curb_10),(curb-clear_curb_11),(curb-clear_curb_12),(curb-clear_curb_13),(curb-clear_curb_14),(curb-clear_curb_15),(curb-clear_curb_16),(curb-clear_curb_17),(curb-clear_curb_18),(curb-clear_curb_19),(curb-clear_curb_20),(curb-clear_curb_21),(curb-clear_curb_22),(curb-clear_curb_23)}
[]
Initial heuristic = 20
Initial stats: t=7.17s, 197860kb
b (19 @ n=53, t=7.99s, 197860kb)b (17 @ n=189, t=10.2s, 197860kb)b (16 @ n=254, t=11.3s, 197860kb)b (15 @ n=505, t=15.46s, 197860kb)b (13 @ n=553, t=16.21s, 197992kb)b (11 @ n=847, t=20.71s, 198256kb)b (9 @ n=993, t=22.62s, 198520kb)b (7 @ n=1271, t=26.38s, 198920kb)b (5 @ n=1432, t=28.23s, 199316kb)db (3 @ n=1775, t=32.82s, 199844kb)b (2 @ n=2074, t=37.13s, 200504kb)b (1 @ n=2186, t=38s, 201296kb)
;;;; Solution Found
; Time 41.95
; Peak memory 202088kb
; Nodes Generated: 2718
; Nodes Expanded:  13
; Nodes Evaluated: 2427
; Nodes Tunneled:  0
; Nodes memoised with open actions: 0
; Nodes memoised without open actions: 2966
; Nodes pruned by memoisation: 248
39.026: (move_car_to_curb--car_07--car_05--curb_07) [2.000] ; (15247)
41.027: (move_car_to_curb--car_08--car_02--curb_08) [2.000] ; (15512)
43.028: (move_curb_to_curb--car_02--curb_00--curb_14) [1.000] ; (1166)
44.029: (move_car_to_curb--car_10--car_00--curb_10) [2.000] ; (16138)
46.030: (move_curb_to_curb--car_00--curb_03--curb_00) [1.000] ; (72)
47.031: (move_car_to_curb--car_03--car_12--curb_03) [2.000] ; (14067)
49.032: (move_curb_to_curb--car_12--curb_01--curb_12) [1.000] ; (6948)
50.033: (move_car_to_curb--car_01--car_13--curb_01) [2.000] ; (13417)
52.034: (move_curb_to_curb--car_13--curb_04--curb_13) [1.000] ; (7597)
53.035: (move_car_to_curb--car_04--car_06--curb_04) [2.000] ; (14260)
55.036: (move_car_to_curb--car_11--car_09--curb_11) [2.000] ; (16691)
57.037: (move_curb_to_curb--car_09--curb_02--curb_09) [1.000] ; (5241)
58.038: (move_curb_to_curb--car_02--curb_14--curb_02) [1.000] ; (1490)
